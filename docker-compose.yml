services:
  magic:
    command: mage start ${PROJECT_NAME}
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./application/mage_ai/Dockerfile
    environment:
      USER_CODE_PATH: /home/src/${PROJECT_NAME}
      ENV: ${ENV}
      MINIO_ROOT_USER: ${min_io_admin}
      MINIO_ROOT_PASSWORD: ${min_io_pwd}
      MAGE_BASE_PATH: mage
    ports:
      - 6789:6789
    volumes:
      - ./application/mage_ai/:/home/src
      - ~/.aws:/root/.aws
      - ~/.mage_data:/root/.mage_data
    networks:
      - ndsnet
    restart: on-failure:5

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage:/data
      - ./storage/export:/export
    environment:
      MINIO_ROOT_USER: ${min_io_admin}
      MINIO_ROOT_PASSWORD: ${min_io_pwd}
      MINIO_BROWSER_REDIRECT_URL: http://localhost/minio/
      MINIO_ACCESS_KEY: YpWqZwajFbA2GyK68woE
      MINIO_SECRET_KEY: DvjF0UCZ7KpuBhEeSm08fIZ4xQtD3qNENJL0HhFP
    command: server --console-address ":9001" /data
    networks:
      - ndsnet
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  jupyterlab:
    env_file:
      - .env
    build:
      context: .
      dockerfile: ./application/jupyterlab/Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./application/jupyterlab/data:/opt/app/data
    entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --notebook-dir=/opt/app/data --NotebookApp.token='admin' --allow-root'
    networks:
      - ndsnet

  trino:
    ports:
      - "8080:8080"
    image: "trinodb/trino:latest"
    volumes:
      - ./application/trino/etc:/usr/lib/trino/etc:ro
      - ./application/trino/catalog:/etc/trino/catalog
    networks:
      - ndsnet

  postgres:
    ports:
      - "5432:5432"
    image: postgres:11
    container_name: postgres
    environment:
      POSTGRES_USER: dbt-trino
      POSTGRES_PASSWORD: dbt-trino
    networks:
      - ndsnet

  metastore_db:
    image: postgres:11
    hostname: metastore_db
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: metastore
    networks:
      - ndsnet

  hive-metastore:
    hostname: hive-metastore
    image: 'starburstdata/hive:3.1.2-e.18'
    ports:
      - '9083:9083' # Metastore Thrift
    environment:
      HIVE_METASTORE_DRIVER: org.postgresql.Driver
      HIVE_METASTORE_JDBC_URL: jdbc:postgresql://metastore_db:5432/metastore
      HIVE_METASTORE_USER: hive
      HIVE_METASTORE_PASSWORD: hive
      HIVE_METASTORE_WAREHOUSE_DIR: s3://datalake/
      S3_ENDPOINT: http://minio:9000
      S3_ACCESS_KEY: ${min_io_admin}
      S3_SECRET_KEY: ${min_io_pwd}
      S3_PATH_STYLE_ACCESS: "true"
      REGION: ""
      GOOGLE_CLOUD_KEY_FILE_PATH: ""
      AZURE_ADL_CLIENT_ID: ""
      AZURE_ADL_CREDENTIAL: ""
      AZURE_ADL_REFRESH_URL: ""
      AZURE_ABFS_STORAGE_ACCOUNT: ""
      AZURE_ABFS_ACCESS_KEY: ""
      AZURE_WASB_STORAGE_ACCOUNT: ""
      AZURE_ABFS_OAUTH: ""
      AZURE_ABFS_OAUTH_TOKEN_PROVIDER: ""
      AZURE_ABFS_OAUTH_CLIENT_ID: ""
      AZURE_ABFS_OAUTH_SECRET: ""
      AZURE_ABFS_OAUTH_ENDPOINT: ""
      AZURE_WASB_ACCESS_KEY: ""
      HIVE_METASTORE_USERS_IN_ADMIN_ROLE: "admin"
    depends_on:
      - metastore_db
    networks:
      - ndsnet

networks:
  ndsnet:
    driver: bridge